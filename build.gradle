group 'JMarkPad'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()

    }
}
repositories {
    jcenter()
    mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

dependencies {
	compile "org.openjfx:javafx-base:11:${platform}"
	compile "org.openjfx:javafx-fxml:11:${platform}"
	compile "org.openjfx:javafx-web:11:${platform}"
	compile "org.openjfx:javafx-media:11:${platform}"
    compile "org.openjfx:javafx-graphics:11:${platform}"
	compile "org.openjfx:javafx-controls:11:${platform}"

		
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/com.jfoenix/jfoenix
    compile group: 'com.jfoenix', name: 'jfoenix', version: '9.0.6'

    // https://mvnrepository.com/artifact/com.vladsch.flexmark/flexmark
    compile group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.34.53'


}
sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
            includes = ["**/*.fxml", "**/*.css"]
            includes = []
        }
    }
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-class': 'ui.Main'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    baseName = project.name
}
